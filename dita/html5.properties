# Orange Heart site arguments for DITA-OT HTML5 transformation

# Set the root for CSS files to an external URL
args.cssroot = 'https://cdnjs.cloudflare.com/ajax/libs/bulma/0.9.3/css/''

# Specify the main CSS file (relative to the args.cssroot)
args.css ='bulma.min.css'

# Copy the custom .css file to the output directory:
args.copycss = no

# Generate a full navigation TOC in topic pages:
nav-toc = full



# ============================================================================ #
#                                    HTML5
# ============================================================================ #

# args.artlbl = no
#                     Specifies whether to generate a label for each image; the 
#                     label will contain the image file name.
#                     [ no ]*
#                     [ yes ]

# args.copycss = no
#                     Specifies whether to copy the custom .css file to the output 
#                     directory.
#                     [ no ]*
#                     [ yes ]

# args.css = 
#                     Specifies the name of a custom .css file.

# args.csspath = 
#                     Specifies the location of a copied .css file relative to the 
#                     output directory.

# args.cssroot = 
#                     Specifies the directory that contains the custom .css file.

# args.dita.locale = 
#                     Specifies the language locale file to use for sorting index 
#                     entries.

# args.ftr = 
#                     Specifies an XML file that contains content for a running 
#                     footer.

# args.gen.default.meta = no
#                     Generate metadata for parental control scanners, meta 
#                     elements with name="security" and name="Robots".
#                     [ no ]*
#                     [ yes ]

# args.hdf = 
#                     Specifies an XML file that contains content to be placed in 
#                     the document head.

# args.hdr = 
#                     Specifies an XML file that contains content for a running 
#                     header.

# args.hide.parent.link = no
#                     Specifies whether to hide links to parent topics in the 
#                     HTML5 output.
#                     [ no ]*
#                     [ yes ]

# args.html5.classattr = yes
#                     Specifies whether to include the DITA class ancestry inside 
#                     the HTML5 elements.
#                     [ no ]
#                     [ yes ]*

# args.html5.contenttarget = contentwin
#                     Specifies the value of the @target attribute on the <base> 
#                     element in the TOC file. Default value: contentwin.

# args.html5.toc = index
#                     Specifies the base name of the TOC file. Default value: 
#                     index.

# args.html5.toc.class = 
#                     Specifies the value of the @class attribute on the <body> 
#                     element in the TOC file.

# args.html5.toc.xsl = 
#                     Specifies a custom XSL file to be used for TOC generation.

# args.indexshow = no
#                     Specifies whether the content of <indexterm> elements are 
#                     rendered in the output.
#                     [ no ]*
#                     [ yes ]

# args.outext = html
#                     Specifies the file extension for HTML5 output. Default 
#                     value: html.

# args.xsl = 
#                     Specifies a custom XSL file to be used instead of the 
#                     default XSL transformation.

# html5.toc.generate = yes
#                     Generate TOC file from the DITA map.
#                     [ no ]
#                     [ yes ]*

# nav-toc = none
#                     Specifies whether to generate a navigation TOC in topic 
#                     pages.
#                     [ full ] - Full TOC
#                     [ none ]* - No TOC
#                     [ partial ] - Partial TOC that shows the current topic
