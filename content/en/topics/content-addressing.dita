<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA 2.0 Concept//EN" "concept.dtd">
<concept id="cids">
  <title>Content Addressing</title>
   <shortdesc>Content addressing identifiers (CIDs) are a standardized way to identify and retrieve digital assets in a decentralized and distributed system.</shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Content Addressing Identifiers</indexterm>
        <indexterm>CID</indexterm>
      </keywords>
    </metadata>
  </prolog>
<conbody>
<section><title>Introduction</title>

<p>Content has unique "fingerprints" which can be cryptographically derived by using a hash.   Taking this hash and adding metadata to it creates a result that can be used as a locator, or content address, for the content. 
Content addressing is a findabiity protocol that uses the contents of the digital assets to generate a unique address that describes the current asset and only that exact asset. 
This informtion architecture is a  key feature of decentralized, resilient technologies as it supports the ability to store many, duplicate copies of assets which can be independently verified without going through a central authority. 
Content addressing identifiers are used on the InterPlanetary File System (IPFS),  Bluesky social, and Github.  It is also a compatible information architecture for edge computing as systems can verify the prevenance on local devices and off-line systems.
</p>
<note>IPFS and Bluesky use the same multiformat with <codeph>SHA-256</codeph> encrypted content CIDs and that Git uses a different <codeph>SHA-1</codeph> content addressing scheme .</note>
</section>

<section><title>Resilient Retrievel</title>
<p>Content identified assets are designed to be stored in multiple locations on the web and the network protocols designed to support the decentralized
web will retrieve the closest asset.</p>
<p>Assets can be stored, duplicated and archived in multiple locations.   Since they are stored in mulitple locations, they can be  retrieved from multiple locations.
Content addressing dovetails nicely with edge computing principles where data is stored and retrieved closer to the user.</p>
<p>Finally, content's authenticity can be easily verified by running the image through a hash and verifying that there's a mathematical match to the hashed content component of the CID.
</p>
</section>


<section><title>Content Versioning</title>
   <p>The use case for the "most recent" version of an asset/resource/website is handled by using static namespace identifiers whose pointers can point to different CIDS over time. 
  Which means that Dweb can support the same functionality as Web 1.0.   
</p> 
</section>

<section><title>CID Information Architecture</title>
<p>CIDs are front-packed with metadata - which in the DWeb world is known as <xref scope="external" type="html" href="https://github.com/multiformats/multiformats">multiformats</xref>.</p>
</section>

<!-- 
Independent verifiability is assured because the content address  because is a result of hashing the content and adding metadata.
If you make any change to the file, it will no longer 

Calculate the cryptographic hash of the asset.</li>
Provide the metadata on SHA-256 


-->


 <p>Take any digital asset, a string, an image, a document, an entire website and load into a cryptographic hash, or function, the result is a unique
 series of numbers and letters for this exact image.   A CID is constructed by taking self-describing metadata 
The hash is then used to construct a multi-hash starts with a self-describing metadata followed by the cryptographic hash of the data. 
</p>
<p>
For example, if we take this website's logo <!-- add logo --> and push it thorugh a hash, the result will be xxx. 

For a multi-hash CID, additional metadata is attached, but the key identifier is the content itself. 

If you even make a minor change to the file, something that isn't perceptible to the eye, that value will change. 

Or if it is a song, changing the recording in some way that's imperceptible to the ear, the CID will change.  It's not longer the original image or the original song, so it's now got a new identifier.

The constructed CID in the decentralized web can be used as the asset's location address.  

I can potentially share a link to this image and its quite possible that there are multiple copies of the same image on the dweb.  
Gateways are the bridg
All the links to this image are guaranteed to present you with the exact same, unaltered image since modifiying the image would change its CID.
Since the DWeb was designed to work with the existing web.   
Provide provenance for digital assets.  
</p>
</section>

<!--

 Try it out 
<ul>
 <li>View on an IPFS gateway </li>
 <li>Install IPFS and then use the following command:  
 </li>
 </ul>


-->

<!-- Benefits to digital assets   metadata and a asset's contents to generate a unique identifier for the digital resource.  

 Using the content hash as part of the identifier opens up features like providing provenance.   It becomes possible to independently verify that a digital asset is indeeed the original and have not been tampered with.
-->
</conbody>
</concept>
