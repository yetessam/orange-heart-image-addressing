<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="deploy">
  <title>Deployment</title>
  <shortdesc>Decentralized web publishing requires content to be published, pinned, and hosted on the decentralized storage.</shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Deployment</indexterm>
        <indexterm>Fleek</indexterm>
        <indexterm>IPFS</indexterm>
        <indexterm>pinning</indexterm>
      </keywords>
    </metadata>
  </prolog>

  <conbody>
    <p>Most enterprise content publishing processes will remain the same when moving to the dweb.</p>
    <p>One shift is the use of decentralized storage using IFPS and that content should be pinned to ensure its availability.</p>

    <p>This current site's uses automation where changes  pushed to the prod branch, result in Fleek deployment.</p>
    <p>Fleek deploys the content to IPFS, generates a new IPFS hash (CID), and pins the content it to keep it available. </p>
    <p>Fleek provides a unique IPFS gateway URL  <codeph>https://delicate-glitter-6121.on-fleek.app/</codeph>.</p>


    <fig>
      <title>Fleek deployment status</title>
      <desc>The screenshot displays the Fleek dashboard, showing a successful step-by-step deployment process. It includes stages such as cloning the Git repository, building the site, creating a check run, publishing the content to IPFS, building logs, and finalizing the release.</desc>
      <image href="../images/fleek_deploy.png" placement="break">
        <alt>Fleek deployment status showing deployment process from cloning the git repo to publishing on IPFS to release</alt>
      </image>
    </fig>

     <p>Next steps could be using a custom domain or static IPNS namespace identifier. 
     Alternatively, we could be publishing dweb or regular apps using the same stack. </p>
  </conbody>
</concept>
