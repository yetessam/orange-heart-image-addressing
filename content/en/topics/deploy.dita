<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="deploy">
  <title>Deployment</title>
  <shortdesc>Deploying to the dweb for the enterprise requires content to be published, pinned, and hosted on  decentralized storage.</shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Deployment</indexterm>
        <indexterm>Fleek</indexterm>
        <indexterm>IPFS</indexterm>
        <indexterm>pinning</indexterm>
      </keywords>
    </metadata>
  </prolog>

  <conbody>
    <p>Most enterprise content publishing processes remain the same when moving to the dweb.</p>
    <p>The main charactertisic is the use of decentralized storage using IFPS and ensuring content is pinned to ensure its availability.</p>
    <p>Fleek provides a unique IPFS gateway URL  <codeph>https://delicate-glitter-6121.on-fleek.app/</codeph>. This is how users access the site and 
potentially I could use a custom domain or static IPNS namespace identifier.</p>



    <p>When changes are pushed to a Github prod branch,  Fleek deployment starts.</p>
    


    <fig>
      <title>Fleek deployment status</title>
      <desc>Successful step-by-step deployment process cloned the Git repository, built the site, created a check run, published the content to IPFS, built logs, and finalized the release.</desc>
      <image href="../images/fleek_deploy.png" placement="break">
        <alt>Fleek deployment status showing deployment process from cloning the git repo to publishing on IPFS to release</alt>
      </image>
    </fig>

    <p>Fleek deployed the content to IPFS, generateed a new IPFS hash (CID), and pinned it.     Alternatively, we could be publishing dweb or regular apps using the same stack. 
</p>
<p>Other platforms including the IPFS CLI can be used to deploy to dweb.  Generative AI, Open AI in particular, is adept at identifying emergent dweb deployment options.
</p>  </conbody>
</concept>
