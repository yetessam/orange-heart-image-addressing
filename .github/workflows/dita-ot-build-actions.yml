name: DITA Workflow

on:
  push:
    branches:
      - dita

jobs:
  build-html:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the dita branch
        uses: actions/checkout@v2
        with:
          ref: dita

      - name: Delete out folder
        run: |
          echo "Deleting out folder"
          rm -rf out

      - name: Build HTML5
        uses: dita-ot/dita-ot-action@master
        with:
          build: |
            set -e
            dita --input=dita/orange-heart.ditamap --format=html5 --verbose --propertyfile=dita/html5.properties 2>&1 | tee log.txt

      - name: Upload log file as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: DITA OT log
          path: log.txt

      - name: List build output
        run: ls -R out

      - name: Configure git
        run: |
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"

      - name: Commit and push changes
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git add out
          if git diff-index --quiet HEAD; then
            echo "No changes to commit"
          else
            git commit -m "Build DITA files"
            git push https://${{ secrets.GH_TOKEN }}@github.com/yetessam/orange-heart-image-addressing.git dita
          fi

      - name: Summarize build
        run: |
          echo "### Summary " >> $GITHUB_STEP_SUMMARY
          echo "$(cat log.txt)" >> $GITHUB_STEP_SUMMARY

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: build-html

    steps:
      - name: Check out the dita branch
        uses: actions/checkout@v2
        with:
          ref: dita

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          set -e
          python -m venv venv
          source venv/bin/activate
          pip install beautifulsoup4

      - name: Run Python script to modify files in the 'out' folder
        run: |
          set -e
          source venv/bin/activate
          python python/modify_files.py

      - name: Debug - List directory contents after running Python script
        run: |
          set -e
          echo "Listing contents of $(pwd):"
          ls -l
          echo "Listing contents of $(pwd)/out:"
          ls -l out

      - name: Archive the 'out' folder
        run: |
          set -e
          tar -czf out.tar.gz out

      - name: Debug - Print absolute paths of the tar file and contents
        run: |
          set -e
          echo "Tar file absolute path: $(pwd)/out.tar.gz"
          ls -l $(pwd)/out.tar.gz

      - name: Move tar file to safe location
        run: |
          set -e
          mv out.tar.gz /tmp/out.tar.gz

      - name: Check out the dev branch
        uses: actions/checkout@v2
        with:
          ref: dev

      - name: Move tar file back to workspace
        run: |
          set -e
          mv /tmp/out.tar.gz .

      - name: Debug - List directory contents after checking out dev branch
        run: |
          set -e
          echo "Listing contents of $(pwd) after checking out dev branch:"
          ls -l

      - name: Extract the 'out' folder
        run: |
          set -e
          tar -xzf out.tar.gz

      - name: Create public folder if it doesn't exist
        run: |
          set -e
          mkdir -p public

      - name: Copy most files (excluding *.css) from 'out' to 'public'
        run: |
          set -e
          find out -type f ! -name '*.css' -exec cp --parents \{\} public/ \;

      - name: Commit and push changes to dev branch
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          set -e
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add public/
          git commit -m "Copy files from 'out' to 'public' excluding *.css"
          git push https://${{ secrets.GH_TOKEN }}@github.com/yetessam/orange-heart-image-addressing.git dev

      - name: Clean up tar file
        run: |
          set -e
          rm -f out.tar.gz
